{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BCAAC,EAAAD,EAAA,SASA,SAASE,IACL,IACI,IAAIC,EAAgBC,aAAaC,QAAQC,KACrCH,EAAcI,QAAU,GACxBJ,EAAgBK,KAAKC,MAAMN,GAC3BO,EAAsBP,KAEtBQ,WAAWC,UAAUC,OAAO,aAC5BC,SAASF,UAAUC,OAAO,aAC1BZ,EAAAc,OAAOC,KACH,2B,CAGV,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAM1B,SAASC,IACL,IACI,IAAIC,EAAalB,aAAaC,QAAQC,KAClCgB,EAAWf,QAAU,GACrBe,EAAad,KAAKC,MAAMa,GACxBZ,EAAsBY,KAEtBX,WAAWC,UAAUC,OAAO,aAC5BC,SAASF,UAAUC,OAAO,aAC1BU,SAASR,OAAOC,KACb,2B,CAGT,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAK1B,SAASV,EAAsBJ,GAC7B,MAAMkB,EAASlB,EACZmB,KAAI,EAAGC,GAAAC,EAAEC,YAAEA,EAAWC,MAAEA,EAAKC,aAAEA,EAAYC,UAAEA,MAC5C,IAAIC,EAAY,GAChB,GAAID,EAAW,CACb,IAAIE,EAAcC,SACfC,QAAO,EAACT,GAAEA,KAASK,EAAUK,SAASV,KACtCD,KAAI,EAACY,KAAEA,KAAWA,IAGnBL,EADEC,EAAY1B,QAAU,EACZ,GAAG0B,EAAYK,MAAM,EAAG,GAAGC,KAAK,iBAEhCN,EAAYM,KAAK,K,CAOjC,MAAO,kCAAkCZ,yBAC3BC,EAJF,kCAAkCC,kEACJD,OAGR,iFACKC,sDACAG,GAAa,0BACvCF,GAAgB,iBAAiBQ,MAC1C,EACA,oCAEU,IAEfC,KAAK,IACRC,aAAaC,UAAYjB,C,CAG3BkB,eAAeC,iBAAiB,QAASC,mBACzCC,eAAeF,iBAAiB,QAASC,mB,kBD5EzC,EAAA7C,EAAA+C,sBCDAC,WAAWJ,iBAAiB,QAASzC,GACrC8C,SAASL,iBAAiB,QAAStB,IDKnC,EAAA4B,EAAAC,cAI2B9C,aAAd+C,KAAO,OAIpB,EAAAC,EAAAC,8BAGA,EAAAC,EAAAC","sources":["src/library.js","src/js/watched_queue.js"],"sourcesContent":["import { sliderRevenueFilms } from './js/slideRevenueFilms';\nimport { scrolToTop } from './js/scrolToTop';\nimport { onTeamModal } from './js/team_modal';\nimport { btnClick } from './js/watched_queue';\n\n\nsliderRevenueFilms();\n// слайлдер з фільмами, що зібрали найбільшу касу\n\nbtnClick();\n\nscrolToTop();\n// кнопка повернення до гори\n\n//авторизація (тимчасове рішення)\nlocalStorage.auth = \"yes\";\n\n// логіка кнопок і посилань навігації хедера\nimport { libraryHeaderLinkBntLogic } from './js/headerBtnLinkLogic';\nlibraryHeaderLinkBntLogic();\n\n// footer\nonTeamModal();\n\n\n\n\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// додати класи у btnWatched і btnQueue у library-section-films.html\n\nexport function btnClick() {\nbtnWatched.addEventListener('click', onWatchedBtnClick);\nbtnQueue.addEventListener('click', onQueueBtnClick);  \n}\n\nfunction onWatchedBtnClick() {\n    try {\n        let watchedMovies = localStorage.getItem(key);\n        if (watchedMovies.length >= 1) {\n            watchedMovies = JSON.parse(watchedMovies);\n            renderWatchedFilmCard(watchedMovies);\n          } else {\n            emptyTitle.classList.remove('is-hidden');\n            emptyImg.classList.remove('is-hidden');\n            Notify.info(\n                `Your film list is empty`\n            );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// Queue\n\nfunction onQueueBtnClick() {\n    try {\n        let queueMovie = localStorage.getItem(key);\n        if (queueMovie.length >= 1) {\n            queueMovie = JSON.parse(queueMovie);\n            renderWatchedFilmCard(queueMovie);\n          } else {\n            emptyTitle.classList.remove('is-hidden');\n            emptyImg.classList.remove('is-hidden');\n            Notiflix.Notify.info(\n               `Your film list is empty`\n    );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n\nfunction renderWatchedFilmCard(key) {\n  const markup = key\n    .map(({ id, poster_path, title, release_date, genre_ids }) => {\n      let filmGenre = '';\n      if (genre_ids) {\n        let filmGenreId = genresId\n          .filter(({ id }) => genre_ids.includes(id))\n          .map(({ name }) => name);\n\n        if (filmGenreId.length >= 4) {\n          filmGenre = `${filmGenreId.slice(0, 2).join(', ')},  Others`;\n        } else {\n          filmGenre = filmGenreId.join(', ');\n        }\n      }\n\n      const img = `<img   class='film__img' alt= '${title}' width='100%'\n      src='https://image.tmdb.org/t/p/original${poster_path}'/>`;\n\n      return `<li class=\"film__item\" data-id=${id}>\n                  ${poster_path ? img : '<p>Poster is not available.</p>'}\n                  <h2 class=\"films__title\">${title}</h2>\n                  <p class=\"films__genres\">${filmGenre || 'Not available'\n        }<span>|${(release_date || 'Not available').slice(\n          0,\n          4\n        )}</span></p>\n              </li>`;\n    })\n    .join('');\n  movieLibrary.innerHTML = markup;\n};\n\nbtnRemoveMovie.addEventListener('click', movieRemovalLogic);\nbtnREmoveQueue.addEventListener('click', movieRemovalLogic);\n\n"],"names":["$9XIKo","parcelRequire","$iQIUW","$8354e51cebac36b3$var$onWatchedBtnClick","watchedMovies","localStorage","getItem","key","length","JSON","parse","$8354e51cebac36b3$var$renderWatchedFilmCard","emptyTitle","classList","remove","emptyImg","Notify","info","error","console","log","message","$8354e51cebac36b3$var$onQueueBtnClick","queueMovie","Notiflix","markup","map","id","id1","poster_path","title","release_date","genre_ids","filmGenre","filmGenreId","genresId","filter","includes","name","slice","join","movieLibrary","innerHTML","btnRemoveMovie","addEventListener","movieRemovalLogic","btnREmoveQueue","sliderRevenueFilms","btnWatched","btnQueue","$1awFj","scrolToTop","auth","$28AT6","libraryHeaderLinkBntLogic","$hR8LQ","onTeamModal"],"version":3,"file":"my_library.c14e6989.js.map"}