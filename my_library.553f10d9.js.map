{"mappings":"gfAEA,IAAAA,EAAAC,EAAA,S,uCCFAC,EAAAD,EAAA,S,aASQ,SAASE,IACb,IACI,IAAIC,EAAgBC,aAAaC,QAAQC,KACrCH,EAAcI,QAAU,EAExBC,EADAL,EAAgBM,KAAKC,MAAMP,KAG3BQ,WAAWC,UAAUC,OAAO,aAC5BC,SAASF,UAAUC,OAAO,aAC1BZ,EAAAc,OAAOC,KACF,2B,CAGX,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAMlB,SAASC,IACb,IACI,IAAIC,EAAalB,aAAaC,QAAQC,KAClCgB,EAAWf,QAAU,EAErBC,EADAc,EAAab,KAAKC,MAAMY,KAGxBX,WAAWC,UAAUC,OAAO,aAC5BC,SAASF,UAAUC,OAAO,aAC1BU,SAASR,OAAOC,KACZ,2B,CAGV,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAK1B,SAASZ,EAAsBF,GAC7B,IAAMkB,EAASlB,EACZmB,KAAI,SAAAC,G,IAAGC,EAAED,EAAFE,GAAIC,EAAWH,EAAXG,YAAaC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aAAcC,EAASN,EAATM,UACxCC,EAAY,GAChB,GAAID,EAAW,CACb,IAAIE,EAAcC,SACfC,QAAO,SAAAC,G,IAAGT,EAAES,EAAFT,G,OAASI,EAAUM,SAASV,E,IACtCH,KAAI,SAAAY,G,OAAOA,EAAJE,I,IAGRN,EADEC,EAAY3B,QAAU,EACZ,GAAsCiC,OAAnCN,EAAYO,MAAM,EAAG,GAAGC,KAAK,MAAM,aAEtCR,EAAYQ,KAAK,K,CAIjC,IAAMC,EAAM,kCAC8BH,OADIV,EAAM,kEACEU,OAAZX,EAAY,OAEtD,MAAO,kCACOW,OAD2Bb,EAAG,yBAELa,OADzBX,EAAcc,EAAM,kCAAkC,iDAE7BH,OADAV,EAAM,sDAEjCU,OAD2BP,GAAa,gBACjD,WAGCO,QAHST,GAAgB,iBAAiBU,MAC1C,EACA,GACA,mC,IAGLC,KAAK,IACRE,EAAAC,KAAKC,aAAaC,UAAYvB,C,EDpEhC,EAAAzB,EAAAiD,uBAKA,EAAAC,EAAAC,cAI2B9C,aAAd+C,KAAO,MCfpBP,EAAAC,KAAKO,WAAWC,iBAAiB,QAASnD,GAC1C0C,EAAAC,KAAKS,SAASD,iBAAiB,QAAShC,IDkBxC,EAAAkC,EAAAC,8BAKA,EAAAC,EAAAC,c","sources":["src/library.js","src/js/watched_queue.js"],"sourcesContent":["// import './scss/index.scss';\n// import './scss/index-dark.scss';\nimport { sliderRevenueFilms } from './js/slideRevenueFilms';\nimport { scrolToTop } from './js/scrolToTop';\nimport { onTeamModal } from './js/team_modal';\n// логіка кнопок і посилань навігації хедера\nimport { libraryHeaderLinkBntLogic } from './js/headerBtnLinkLogic';\nimport { btnClick } from './js/watched_queue';\n\n\nsliderRevenueFilms();\n// слайлдер з фільмами, що зібрали найбільшу касу\n\n// btnClick();\n\nscrolToTop();\n// кнопка повернення до гори\n\n//авторизація (тимчасове рішення)\nlocalStorage.auth = \"yes\";\n\nbtnClick();\n// по кліку на кнопки рендериться відповідна інформація\nlibraryHeaderLinkBntLogic();\n\n\n\n// footer\nonTeamModal();\n\n\n\n\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from './refs';\n \nexport function btnClick() {\nrefs.btnWatched.addEventListener('click', onWatchedBtnClick);\nrefs.btnQueue.addEventListener('click', onQueueBtnClick);  \n}\n\n\nexport  function onWatchedBtnClick() {\n    try {\n        let watchedMovies = localStorage.getItem(key);\n        if (watchedMovies.length >= 1) {\n            watchedMovies = JSON.parse(watchedMovies);\n            renderWatchedFilmCard(watchedMovies);\n          } else {\n            emptyTitle.classList.remove('is-hidden');\n            emptyImg.classList.remove('is-hidden');\n            Notify.info(\n                `Your film list is empty`\n            );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// Queue\n\nexport  function onQueueBtnClick() {\n    try {\n        let queueMovie = localStorage.getItem(key);\n        if (queueMovie.length >= 1) {\n            queueMovie = JSON.parse(queueMovie);\n            renderWatchedFilmCard(queueMovie);\n          } else {\n            emptyTitle.classList.remove('is-hidden');\n            emptyImg.classList.remove('is-hidden');\n            Notiflix.Notify.info(\n               `Your film list is empty`\n    );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n\nfunction renderWatchedFilmCard(key) {\n  const markup = key\n    .map(({ id, poster_path, title, release_date, genre_ids }) => {\n      let filmGenre = '';\n      if (genre_ids) {\n        let filmGenreId = genresId\n          .filter(({ id }) => genre_ids.includes(id))\n          .map(({ name }) => name);\n\n        if (filmGenreId.length >= 4) {\n          filmGenre = `${filmGenreId.slice(0, 2).join(', ')},  Others`;\n        } else {\n          filmGenre = filmGenreId.join(', ');\n        }\n      }\n\n      const img = `<img   class='film__img' alt= '${title}' width='100%'\n      src='https://image.tmdb.org/t/p/original${poster_path}'/>`;\n\n      return `<li class=\"film__item\" data-id=${id}>\n                  ${poster_path ? img : '<p>Poster is not available.</p>'}\n                  <h2 class=\"films__title\">${title}</h2>\n                  <p class=\"films__genres\">${filmGenre || 'Not available'\n        }<span>|${(release_date || 'Not available').slice(\n          0,\n          4\n        )}</span></p>\n              </li>`;\n    })\n    .join('');\n  refs.movieLibrary.innerHTML = markup;\n};\n"],"names":["$9I33b","parcelRequire","$h6c0i","$f8a7324243d2254a$export$852eb21c65e590aa","watchedMovies","localStorage","getItem","key","length","$f8a7324243d2254a$var$renderWatchedFilmCard","JSON","parse","emptyTitle","classList","remove","emptyImg","Notify","info","error","console","log","message","$f8a7324243d2254a$export$47c64e1cb6fdbeb7","queueMovie","Notiflix","markup","map","param1","id1","id","poster_path","title","release_date","genre_ids","filmGenre","filmGenreId","genresId","filter","param","includes","name","concat","slice","join","img","$4Nugj","refs","movieLibrary","innerHTML","sliderRevenueFilms","$8BN3R","scrolToTop","auth","btnWatched","addEventListener","btnQueue","$jQRv7","libraryHeaderLinkBntLogic","$puS1k","onTeamModal"],"version":3,"file":"my_library.553f10d9.js.map"}