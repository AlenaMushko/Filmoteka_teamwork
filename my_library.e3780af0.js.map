{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCCAAC,EAAAD,EAAA,S,8EAOME,EAAY,IAAI,EAAAC,EAAAC,WACH,IAAI,EAAAC,EAAAC,SAOf,SAASC,IACf,IACwBL,EAAUM,iBAKxBC,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/BE,EAAAC,OAAOC,KACF,2B,CAGX,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAMlB,SAASC,IACb,IAC0BpB,EAAUqB,iBAC5BC,W,WAkBIC,EAA0BC,MAAAC,KAAAC,U,CAjBhCC,IAEEpB,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/BiB,SAASd,OAAOC,KACZ,2B,CAGV,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAK1B,IAAIU,EAAkB7B,EAAUqB,iB,SAGhBE,I,OAAAA,EAAfO,EAAA/B,EAAA,CAAA+B,EAAAC,GAAAC,MAAA,SAAAC,I,IACSC,E,kFAAgBC,wBAAwBN,G,OAAxCK,EAAOE,EAAAC,KACfpB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIW,GACZ,KACE,EAAAS,EAAAC,gBAAeL,GACfM,WAAWC,MAAMP,EAAQQ,c,CACzB,MAAO1B,GACPC,QAAQC,IAAIF,E,6CAR0BQ,MAAAC,KAAAC,U,0DDzC1C,EAAAiB,EAAAC,6BAI2BC,aAAdC,KAAO,OAGJ,EAAhBC,EAAAC,oBAGqCC,YAAzBC,EAAAC,kCAAmC,MAIR,EAAvCtD,EAAAuD,sBClBA7C,EAAAC,KAAK6C,WAAWC,iBAAiB,QAASjD,GAC1CE,EAAAC,KAAK+C,SAASD,iBAAiB,QAASlC,IDqBxC,EAAAoC,EAAAC,eAKA,EAAAC,EAAAC,c","sources":["src/library.js","src/js/watched_queue.js"],"sourcesContent":["import { sliderRevenueFilms } from './js/slideRevenueFilms';\nimport { scrolToTop } from './js/scrolToTop';\nimport { onTeamModal } from './js/team_modal';\n// логіка кнопок і посилань навігації хедера\nimport { libraryHeaderLinkBntLogic } from './js/headerBtnLinkLogic';\nimport { btnClick } from './js/watched_queue';\n import { giveLocalStorageToFirebaseStorage, deleteUserDataInFirebaseStorage } from './js/firebaseDatastorage';\nimport  'lazysizes' ; \nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport { onFirstLoadTheme } from './js/changeTheme';\n// import {} from './js/language';\n// import { renderWatchedFilmInLibrary } from './js/watched_queue';\n\n\n// -------------------------------------------header\nlibraryHeaderLinkBntLogic();\n// рендириця картка фільму з id що в  localStorage\n// renderWatchedFilmInLibrary();\n//авторизація (тимчасове рішення)\nlocalStorage.auth = 'yes';\n\n//завантаження теми\nonFirstLoadTheme();\n\n//надсилання в сховище фаєрбейз кожні 10 секунд\nsetInterval(giveLocalStorageToFirebaseStorage, 10000); \n\n//--------------------------------------------body\n// слайлдер з фільмами, що зібрали найбільшу касу\nsliderRevenueFilms();\n// по кліку на кнопки рендериться відповідна інформація\nbtnClick();\n// кнопка повернення догори\nscrolToTop();\n\n\n//------------------------------------------footer\n// footer\nonTeamModal();\n\n\n\n\n\n\n\n\n\n// ---------------------------------\n\n\n// import MyLibrary from './js/localStorage';\n// import { renderFilmCard } from './js/renderFunction';\n// import axios from 'axios';\n// import genresId from './genres.json';\n// import { refs } from './js/refs';\n\n// const myLibrary = new MyLibrary();\n// const KEY = '32432509d17cea42104bbb7507a382c7';\n// const api_key = `?api_key=${KEY}`;\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\n// async function getFilmFromLocalStorage(arrWatchedFilms) {\n//     Promise.all(arrWatchedFilms.map((idWatchedFilm) => {\n//       try {\n//         const url = `${BASE_URL}movie/${idWatchedFilm}${api_key}&append_to_response=images`;\n//         return axios.get(url).then(response => {\n//           if (!response) {\n//             throw new Error(response.status);\n//           }\n//           // console.log(response.data);\n//           return response.data;\n//         });\n//       } catch (error) {\n//         console.error();\n//       }\n//     }))\n// };\n\n// function filmCardToLibrary( id, poster_path, title, original_title, original_name, release_date, first_air_date, genre_ids ) {\n//   let filmGenreId = '';\n//   if (genre_ids) {\n//     filmGenreId = genresId\n//       .filter(({ id }) => genre_ids.includes(id))\n//       .map(({ name }) => name)\n//       .join(', ');\n//   }\n//   return `\n//       <li class=\"glide__slide\" data-id=${id}>\n//       <a class=\"glide__link\" href= \"\">\n//       <div class=\"glide__container\">\n//                  <img   class='glide__img' alt= '${title || original_title || original_name}' width='360' loading=\"lazy\"\n//                   src='https://image.tmdb.org/t/p/original${poster_path}'/>\n//                   <div class=\"glide__text\">\n//                   <h2 class=\"glide__title\">${title || original_title || original_name}</h2>\n//                   <p class=\"glide__genres\">${filmGenreId}<span>|${(\n//         release_date || first_air_date|| 'Not available'\n//       ).slice(0, 4)}</span></p></div></div></a>\n//               </li>`;\n// }\n\n// let arrWatchedFilms = myLibrary.getFromWatched();\n\n// function renderCard(film) {\n//     const markup = filmCardToLibrary(film);\n//     refs.glideSlides.innerHTML = markup;\n//     console.log(markup);\n//     console.log(film);\n// }\n// renderWatchedFilmInLibrary()\n// function renderWatchedFilmInLibrary() {\n//   getFilmFromLocalStorage(arrWatchedFilms).then(result => {\n//     console.log(result);\n//     renderCard(result);\n//    }).catch((error)=> {\n//     console.log(error);\n//   })\n// }\n\n// renderCard()\n\n\n\n\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from './refs';\nimport { MyLibrary } from './localStorage';\nimport ApiService from './fetchProdactsAPI';\nimport { renderFilmCard } from './renderFunction';\n\n\nconst myLibrary = new MyLibrary();\nconst apiService = new ApiService();\n\nexport function btnClick() {\nrefs.btnWatched.addEventListener('click', onWatchedBtnClick);\nrefs.btnQueue.addEventListener('click', onQueueBtnClick);  \n}\n\nexport  function onWatchedBtnClick() {\n  try {\n    let arrWatchedFilms = myLibrary.getFromQueue();\n\n    if (arrWatchedFilms) {\n          // renderWatchedFilmInLibrary(arrWatchedFilms);\n    } else  {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notify.info(\n                `Your film list is empty`\n            );\n    } \n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// Queue\n\nexport  function onQueueBtnClick() {\n    try {\n        let arrWatchedFilms = myLibrary.getFromWatched();\n        if (queueMovie) {\n          renderWatchedFilmInLibrary();\n          } else {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notiflix.Notify.info(\n               `Your film list is empty`\n    );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// -------------\nlet arrWatchedFilms = myLibrary.getFromWatched();\n\n// renderWatchedFilmInLibrary()\n async function renderWatchedFilmInLibrary() {\n    const results = await getFilmFromLocalStorage(arrWatchedFilms);\n  console.log(results);\n  console.log(arrWatchedFilms);\n  try {\n    renderFilmCard(results);\n    pagination.reset(results.total_results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n"],"names":["$9I33b","parcelRequire","$bpxeT","$f8a7324243d2254a$var$myLibrary","$UL92Z","MyLibrary","$8fdg5","default","$f8a7324243d2254a$export$852eb21c65e590aa","getFromQueue","$4Nugj","refs","emptyTitle","classList","remove","emptyImg","$h6c0i","Notify","info","error","console","log","message","$f8a7324243d2254a$export$47c64e1cb6fdbeb7","getFromWatched","queueMovie","$f8a7324243d2254a$var$_renderWatchedFilmInLibrary","apply","this","arguments","$f8a7324243d2254a$var$renderWatchedFilmInLibrary","Notiflix","$f8a7324243d2254a$var$arrWatchedFilms","$parcel$interopDefault","$2TvXO","mark","_callee","results","getFilmFromLocalStorage","_ctx","sent","$2ibrE","renderFilmCard","pagination","reset","total_results","$jQRv7","libraryHeaderLinkBntLogic","localStorage","auth","$3jSZ7","onFirstLoadTheme","setInterval","$eWSA9","giveLocalStorageToFirebaseStorage","sliderRevenueFilms","btnWatched","addEventListener","btnQueue","$8BN3R","scrolToTop","$puS1k","onTeamModal"],"version":3,"file":"my_library.e3780af0.js.map"}