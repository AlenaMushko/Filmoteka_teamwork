{"mappings":"ylBAAAA,EAAAC,EAAA,S,8EAOMC,EAAY,IAAI,EAAAC,EAAAC,WACH,IAAI,EAAAC,EAAAC,SAOf,SAASC,IACf,IACwBL,EAAUM,iBAKxBC,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/BE,EAAAC,OAAOC,KACF,2B,CAGX,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAMlB,SAASC,IACb,IAC0BpB,EAAUqB,iBAC5BC,W,WAkBIC,EAA0BC,MAAAC,KAAAC,U,CAjBhCC,IAEEpB,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/BiB,SAASd,OAAOC,KACZ,2B,CAGV,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAK1B,IAAIU,EAAkB7B,EAAUqB,iB,SAGhBE,I,OAAAA,EAAfO,EAAAhC,EAAA,CAAAgC,EAAAC,GAAAC,MAAA,SAAAC,I,IACSC,E,kFAAgBC,wBAAwBN,G,OAAxCK,EAAOE,EAAAC,KACfpB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIW,GACZ,KACE,EAAAS,EAAAC,gBAAeL,GACfM,WAAWC,MAAMP,EAAQQ,c,CACzB,MAAO1B,GACPC,QAAQC,IAAIF,E,6CAR0BQ,MAAAC,KAAAC,U,0DCnC1C,EAAAiB,EAAAC,6BAK2BC,aAAdC,KAAO,OAGJ,EAAhBC,EAAAC,2BAGqCC,YAAzBC,EAAAC,kCAAmC,MAIR,EAAvCC,EAAAC,sBDzBA9C,EAAAC,KAAK8C,WAAWC,iBAAiB,QAASlD,GAC1CE,EAAAC,KAAKgD,SAASD,iBAAiB,QAASnC,IC4BxC,EAAAqC,EAAAC,eAIA,EAAAC,EAAAC,c","sources":["src/js/watched_queue.js","src/library.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from './refs';\nimport { MyLibrary } from './localStorage';\nimport ApiService from './fetchProdactsAPI';\nimport { renderFilmCard } from './renderFunction';\n\n\nconst myLibrary = new MyLibrary();\nconst apiService = new ApiService();\n\nexport function btnClick() {\nrefs.btnWatched.addEventListener('click', onWatchedBtnClick);\nrefs.btnQueue.addEventListener('click', onQueueBtnClick);  \n}\n\nexport  function onWatchedBtnClick() {\n  try {\n    let arrWatchedFilms = myLibrary.getFromQueue();\n\n    if (arrWatchedFilms) {\n          // renderWatchedFilmInLibrary(arrWatchedFilms);\n    } else  {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notify.info(\n                `Your film list is empty`\n            );\n    } \n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// Queue\n\nexport  function onQueueBtnClick() {\n    try {\n        let arrWatchedFilms = myLibrary.getFromWatched();\n        if (queueMovie) {\n          renderWatchedFilmInLibrary();\n          } else {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notiflix.Notify.info(\n               `Your film list is empty`\n    );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// -------------\nlet arrWatchedFilms = myLibrary.getFromWatched();\n\n// renderWatchedFilmInLibrary()\n async function renderWatchedFilmInLibrary() {\n    const results = await getFilmFromLocalStorage(arrWatchedFilms);\n  console.log(results);\n  console.log(arrWatchedFilms);\n  try {\n    renderFilmCard(results);\n    pagination.reset(results.total_results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n","import {} from './scss/index.scss';\nimport { sliderRevenueFilms } from './js/slideRevenueFilms';\nimport { scrolToTop } from './js/scrolToTop';\nimport { onTeamModal } from './js/team_modal';\n// логіка кнопок і посилань навігації хедера\nimport { libraryHeaderLinkBntLogic } from './js/headerBtnLinkLogic';\nimport { btnClick } from './js/watched_queue';\nimport {\n  giveLocalStorageToFirebaseStorage,\n  deleteUserDataInFirebaseStorage,\n} from './js/firebaseDatastorage';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport { onFirstLoadThemeLibrary } from './js/changeTheme';\n// import { renderWatchedFilmInLibrary } from './js/functionsForFilms';\n// import { renderQueueFilmInLibrary } from './js/functionsForFilms';\n\n// import {} from './js/language';\n// import { renderWatchedFilmInLibrary } from './js/watched_queue';\n\n// -------------------------------------------header\nlibraryHeaderLinkBntLogic();\n// рендириця картка фільму з id що в  localStorage\n// renderWatchedFilmInLibrary();\n// renderQueueFilmInLibrary();\n//авторизація (тимчасове рішення)\nlocalStorage.auth = 'yes';\n\n//завантаження теми\nonFirstLoadThemeLibrary();\n\n//надсилання в сховище фаєрбейз кожні 10 секунд\nsetInterval(giveLocalStorageToFirebaseStorage, 10000);\n\n//--------------------------------------------body\n// слайлдер з фільмами, що зібрали найбільшу касу\nsliderRevenueFilms();\n// по кліку на кнопки рендериться відповідна інформація\nbtnClick();\n// кнопка повернення догори\nscrolToTop();\n\n//------------------------------------------footer\n// footer\nonTeamModal();\n\n\n"],"names":["$bpxeT","parcelRequire","$f8a7324243d2254a$var$myLibrary","$UL92Z","MyLibrary","$8fdg5","default","$f8a7324243d2254a$export$852eb21c65e590aa","getFromQueue","$4Nugj","refs","emptyTitle","classList","remove","emptyImg","$h6c0i","Notify","info","error","console","log","message","$f8a7324243d2254a$export$47c64e1cb6fdbeb7","getFromWatched","queueMovie","$f8a7324243d2254a$var$_renderWatchedFilmInLibrary","apply","this","arguments","$f8a7324243d2254a$var$renderWatchedFilmInLibrary","Notiflix","$f8a7324243d2254a$var$arrWatchedFilms","$parcel$interopDefault","$2TvXO","mark","_callee","results","getFilmFromLocalStorage","_ctx","sent","$2ibrE","renderFilmCard","pagination","reset","total_results","$jQRv7","libraryHeaderLinkBntLogic","localStorage","auth","$3jSZ7","onFirstLoadThemeLibrary","setInterval","$eWSA9","giveLocalStorageToFirebaseStorage","$9I33b","sliderRevenueFilms","btnWatched","addEventListener","btnQueue","$8BN3R","scrolToTop","$puS1k","onTeamModal"],"version":3,"file":"my_library.fcdd5a95.js.map"}