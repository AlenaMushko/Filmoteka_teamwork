{"mappings":"4hBAAAA,EAAAC,EAAA,S,oDAOA,MAAMC,EAAY,IAAI,EAAAC,EAAAC,WACH,IAAI,EAAAC,EAAAC,SAOf,SAASC,IACf,IACwBL,EAAUM,iBAKxBC,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/Bb,EAAAe,OAAOC,KACH,2B,CAGV,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAMlB,SAASC,IACb,IAC0BnB,EAAUoB,iBAC5BC,WAkBXC,iBACG,MAAMC,QAAgBC,wBAAwBC,GAChDT,QAAQC,IAAIM,GACZP,QAAQC,IAAIQ,GACZ,KACE,EAAAC,EAAAC,gBAAeJ,GACfK,WAAWC,MAAMN,EAAQO,c,CACzB,MAAOf,GACPC,QAAQC,IAAIF,E,EAzBNgB,IAEExB,EAAAC,KAAKC,WAAWC,UAAUC,OAAO,aACjCJ,EAAAC,KAAKI,SAASF,UAAUC,OAAO,aAC/BqB,SAASnB,OAAOC,KACb,2B,CAGT,MAAOC,GACLC,QAAQC,IAAIF,EAAMG,Q,EAK1B,IAAIO,EAAkBzB,EAAUoB,iB,yDChChC,EAAAa,EAAAC,6BAK2BC,aAAdC,KAAO,OAGJ,EAAhBC,EAAAC,2BAGqCC,YAAzBC,EAAAC,kCAAmC,MAIR,EAAvCC,EAAAC,sBDzBApC,EAAAC,KAAKoC,WAAWC,iBAAiB,QAASxC,GAC1CE,EAAAC,KAAKsC,SAASD,iBAAiB,QAAS1B,IC4BxC,EAAA4B,EAAAC,eAIA,EAAAC,EAAAC","sources":["src/js/watched_queue.js","src/library.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from './refs';\nimport { MyLibrary } from './localStorage';\nimport ApiService from './fetchProdactsAPI';\nimport { renderFilmCard } from './renderFunction';\n\n\nconst myLibrary = new MyLibrary();\nconst apiService = new ApiService();\n\nexport function btnClick() {\nrefs.btnWatched.addEventListener('click', onWatchedBtnClick);\nrefs.btnQueue.addEventListener('click', onQueueBtnClick);  \n}\n\nexport  function onWatchedBtnClick() {\n  try {\n    let arrWatchedFilms = myLibrary.getFromQueue();\n\n    if (arrWatchedFilms) {\n          // renderWatchedFilmInLibrary(arrWatchedFilms);\n    } else  {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notify.info(\n                `Your film list is empty`\n            );\n    } \n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// Queue\n\nexport  function onQueueBtnClick() {\n    try {\n        let arrWatchedFilms = myLibrary.getFromWatched();\n        if (queueMovie) {\n          renderWatchedFilmInLibrary();\n          } else {\n            refs.emptyTitle.classList.remove('is-hidden');\n            refs.emptyImg.classList.remove('is-hidden');\n            Notiflix.Notify.info(\n               `Your film list is empty`\n    );\n        }\n    } catch (error) {\n        console.log(error.message);\n    }\n    return;\n};\n// -------------\nlet arrWatchedFilms = myLibrary.getFromWatched();\n\n// renderWatchedFilmInLibrary()\n async function renderWatchedFilmInLibrary() {\n    const results = await getFilmFromLocalStorage(arrWatchedFilms);\n  console.log(results);\n  console.log(arrWatchedFilms);\n  try {\n    renderFilmCard(results);\n    pagination.reset(results.total_results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n","import {} from './scss/index.scss';\nimport { sliderRevenueFilms } from './js/slideRevenueFilms';\nimport { scrolToTop } from './js/scrolToTop';\nimport { onTeamModal } from './js/team_modal';\n// логіка кнопок і посилань навігації хедера\nimport { libraryHeaderLinkBntLogic } from './js/headerBtnLinkLogic';\nimport { btnClick } from './js/watched_queue';\nimport {\n  giveLocalStorageToFirebaseStorage,\n  deleteUserDataInFirebaseStorage,\n} from './js/firebaseDatastorage';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport { onFirstLoadThemeLibrary } from './js/changeTheme';\n// import { renderWatchedFilmInLibrary } from './js/functionsForFilms';\n// import { renderQueueFilmInLibrary } from './js/functionsForFilms';\n\n// import {} from './js/language';\n// import { renderWatchedFilmInLibrary } from './js/watched_queue';\n\n// -------------------------------------------header\nlibraryHeaderLinkBntLogic();\n// рендириця картка фільму з id що в  localStorage\n// renderWatchedFilmInLibrary();\n// renderQueueFilmInLibrary();\n//авторизація (тимчасове рішення)\nlocalStorage.auth = 'yes';\n\n//завантаження теми\nonFirstLoadThemeLibrary();\n\n//надсилання в сховище фаєрбейз кожні 10 секунд\nsetInterval(giveLocalStorageToFirebaseStorage, 10000);\n\n//--------------------------------------------body\n// слайлдер з фільмами, що зібрали найбільшу касу\nsliderRevenueFilms();\n// по кліку на кнопки рендериться відповідна інформація\nbtnClick();\n// кнопка повернення догори\nscrolToTop();\n\n//------------------------------------------footer\n// footer\nonTeamModal();\n\n\n"],"names":["$iQIUW","parcelRequire","$8354e51cebac36b3$var$myLibrary","$31u3U","MyLibrary","$f4Y7b","default","$8354e51cebac36b3$export$852eb21c65e590aa","getFromQueue","$krGWQ","refs","emptyTitle","classList","remove","emptyImg","Notify","info","error","console","log","message","$8354e51cebac36b3$export$47c64e1cb6fdbeb7","getFromWatched","queueMovie","async","results","getFilmFromLocalStorage","$8354e51cebac36b3$var$arrWatchedFilms","$7NS3K","renderFilmCard","pagination","reset","total_results","$8354e51cebac36b3$var$renderWatchedFilmInLibrary","Notiflix","$28AT6","libraryHeaderLinkBntLogic","localStorage","auth","$1wH5c","onFirstLoadThemeLibrary","setInterval","$iytAl","giveLocalStorageToFirebaseStorage","$9XIKo","sliderRevenueFilms","btnWatched","addEventListener","btnQueue","$1awFj","scrolToTop","$hR8LQ","onTeamModal"],"version":3,"file":"my_library.6e04f324.js.map"}